这是我定义的数据库传参函数：
    def InquiryLogin(self,Admin):
        self.OpenDB()
        Admin=str(Admin.strip())
        self.cur.execute("SELECT Password FROM Table_Login WHERE Admin='%s'" % Admin)
        pwd = self.cur.fetchone()
        print(type(pwd))
        self.CloseDB()
        return pwd
    #检查登录的函数
    def Login(userAccount, pwd):
        db = DB()
        if(db.InquiryLogin(userAccount) != None):
            T_PassWord = str(db.InquiryLogin(userAccount)[0])
        else:
            T_PassWord = str(db.InquiryLogin(userAccount))
        #print(T_PassWord);print(type(T_PassWord))
        if str(pwd) == T_PassWord:
            print("登录成功！")
            main_surface_pane.show() #加载软件主界面
            login.hide() #退出登录界面
        else:
            print("登录失败！")
编写思路:传入Admin字段给数据库，通过查询语句返回Password字段，再与文本框获得的Password字段进行比较。

我的第一个问题是被网上答案误导cur.execute()后的%s不加单引号，由于我设置的参数与数据库字段重合，
导致的运行结果就是当传入的字段值如果不为"Admin"或不为纯数字组合的字符串则停止运行。
Disvantage:虽然当账号输入"Admin"时可以瞒天过海，输入错误的密码会报错，输入正确的密码正常运行。但是一旦输入错误的用户名则会程序崩溃。
教训:当编写数据库语句传入参数时，一定要给%s加''单引号！！！

我的第二个问题是返回的参数类型的处理。
当返回值pwd为None类型时无法转换为str类型，判断条件"str(pwd) == T_PassWord"——只要字符串不等就执行else语句。
但是当pwd返回Tuple(即元组类型)时，它类似与列表的一种，与列表操作大部分相同，但是即使元组tuple类型转换成str类型时相同的数值也转为两个不同的字符串。
解决方案:对返回的类型进行处理，若为tuple类型则去元组下标为0即第一个元素即可——db.InquiryLogin(userAccount)[0]，最后全部转为str类型就解决了。
